USER STORY: Database Schema en Datamodel

Als ontwikkelaar
Wil ik het database schema ontwerpen voor identifier tracking
Zodat het systeem productversies, identifiers en tracking geschiedenis kan opslaan

ACCEPTATIECRITERIA:
- [ ] Database schema ontworpen met alle vereiste entiteiten:
  - Product Versies (naam, EAN, tracking configuratie, timestamps)
  - Device Identifiers (IMEI, serienummer, status, clearance info, timestamps)
  - Leveringen (leveringsinfo, status, timestamps) - immutable na registratie
  - Leveringsregels (productversie, hoeveelheid per levering) - immutable
  - Status Geschiedenis (wijzigingen log per identifier)
  - Productversie Geschiedenis (versie swap log)
  - Identifier Geschiedenis (IMEI/serienummer wijzigingen log)
  - Bulk Voorraad (voor niet-getrackte items)

- [ ] Database relaties gedefinieerd:
  - Foreign key constraints tussen alle gerelateerde tabellen
  - Referential integrity voor data consistentie
  - Cascade rules voor verwijdering/updates

- [ ] Data integriteit constraints:
  - Unique constraints op IMEI en serienummers
  - Check constraints voor status en tracking_mode waarden
  - Not null constraints op verplichte velden
  - Data type validaties

- [ ] Database migratie strategie:
  - Migratie scripts voor schema changes
  - Seed data voor initiÃ«le setup
  - Backup en restore procedures

BUSINESS RULES:
- Tracking modes: 'none', 'imei', 'serial'
- Status waarden: 'in_stock', 'sold', 'defective', 'missing', 'reserved'
- Delivery status: 'concept', 'booked', 'partially_booked'
- IMEI/serienummers moeten globaal uniek zijn
- Alle wijzigingen moeten gelogd worden voor audit trail
- Leveringsregistraties zijn immutable na booking
- Device identifiers bewaren zowel huidige als oorspronkelijke leveringsrelaties
- Productversie swaps wijzigen niet de oorspronkelijke leveringsdata

STORY POINTS: 3
PRIORITY: High (Foundation)
DEPENDENCIES: None